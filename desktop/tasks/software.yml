- name: correct google chrome repo
  block:
    - name: dummy for notifing handler
      command: echo
      notify:
        - redeploy chrome repository
    - name: force running of all notified handlers now
      meta: flush_handlers
  tags:
    - software-all
    - software-default
    - software-apt
    - upgrade

- name: upgrade system
  block:
    - name: running apt
      apt:
        upgrade: yes
        update_cache: yes
      notify:
        - redeploy chrome repository
    - name: force running of all notified handlers now
      meta: flush_handlers
  tags:
    - software-all
    - software-default
    - upgrade

- name: autoremove orphanned packages
  apt:
    autoremove: yes
  tags:
    - software-all
    - software-default
    - upgrade

- name: software-default
  block:
    - name: running apt
      apt:
        pkg:
          - ansible
          - ansible-lint
          - bing
          - build-essential
          - ceph-common
          - ceph-fuse
          - code
          - cowsay
          - cpp
          - curl
          - firefox
          - gcc
          - git
          - git-lfs
          - google-chrome-stable
          - htop
          - ipython3
          - kubeadm
          - kubectl
          - nodejs
          - openssh-client
          - openssh-server
          - postgresql
          - postgresql-client
          - postgresql-contrib
          - python3
          - python3-pip
          - python3-venv
          - qgis
          - ssh-import-id
          - sshpass
          - ubuntu-oem-keyring
          - unzip
          - vim
          - xfsprogs
        state: present
        update_cache: yes
      notify:
        - redeploy chrome repository
    - name: force running of all notified handlers now
      meta: flush_handlers
  tags:
    - software-all
    - software-default
    - software-apt

- name: deploy pip config for nexus
  template:
    src: pip.j2
    dest: /etc/pip.conf
    owner: root
    group: root
    mode: 0644
    backup: no
  tags:
    - software-all
    - software-default

- name: install golang 1.18 from ppa
  block:
    - apt:
        pkg: golang-1.18
        state: present
        update_cache: no
    - file:
        src: /usr/lib/go-1.18/bin/go
        dest: /usr/bin/go
        state: link
  tags:
    - software-all
    - software-default
    - software-apt
    - golang

- name: install nexus-sync
  block:
    - copy:
        src: nexus-sync
        dest: /usr/local/sbin
        owner: root
        group: root
        mode: 0755
        backup: no
    - copy:
        src: ns-import.conf
        dest: /etc
        owner: root
        group: root
        mode: 0644
        backup: no
  tags:
    - software-all
    - software-default

- name: Install yq
  get_url:
    url: "{{nexus_proxy_proto}}://{{nexus_proxy}}:{{nexus_proxy_port}}/repository/raw-github/mikefarah/yq/releases/{{ version_yq }}/download/yq_linux_amd64"
    dest: /usr/local/sbin/yq
    owner: root
    group: root
    mode: 0755
  tags:
    - software-all
    - yq

- name: Install k9s
  unarchive:
    src: "{{nexus_proxy_proto}}://{{nexus_proxy}}:{{nexus_proxy_port}}/repository/raw-github/derailed/k9s/releases/{{ version_k9s }}/download/k9s_Linux_x86_64.tar.gz"
    dest: /usr/local/sbin
    extra_opts: [--strip-components=0, k9s]
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  tags:
    - software-all
    - k9s

- name: Install helm
  unarchive:
    src: "{{nexus_proxy_proto}}://{{nexus_proxy}}:{{nexus_proxy_port}}/repository/raw-helm/helm-{{ version_helm }}-linux-amd64.tar.gz"
    dest: /usr/local/sbin
    extra_opts: [--strip-components=1, linux-amd64/helm]
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  tags:
    - software-all
    - helm

- name: Install Terraform
  unarchive:
    src: "{{nexus_proxy_proto}}://{{nexus_proxy}}:{{nexus_proxy_port}}/repository/raw-hashicorp/terraform/{{ version_terraform }}/terraform_{{ version_terraform }}_linux_amd64.zip"
    dest: /usr/local/sbin
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  tags:
    - software-all
    - terraform

- name: create global Terraform Proxmox plugin folder
  file:
    path: /usr/local/share/terraform/plugins/registry.terraform.io/telemate/proxmox/{{ version_terraform_provider_proxmox }}/download/linux_amd64
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: yes
  tags:
    - software-all
    - terraform

- name: install Terraform Proxmox plugin
  unarchive:
    src: "{{nexus_proxy_proto}}://{{nexus_proxy}}:{{nexus_proxy_port}}/repository/raw-github/Telmate/terraform-provider-proxmox/releases/latest/download/terraform-provider-proxmox_{{version_terraform_provider_proxmox}}_linux_amd64.zip"
    dest: /usr/local/share/terraform/plugins/registry.terraform.io/telemate/proxmox/{{ version_terraform_provider_proxmox }}/download/linux_amd64/
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  tags:
    - software-all
    - terraform
